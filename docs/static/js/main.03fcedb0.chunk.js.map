{"version":3,"sources":["components/Pokemon.js","components/PokeList.js","components/App.js","index.js"],"names":["Pokemon","props","typesList","types","map","type","index","className","id","onClick","ev","handlePokemon","src","url","alt","name","PokeList","pokeList","pokemons","pokemon","toString","propTypes","PropTypes","number","string","App","favTitle","noFavs","useState","data","favs","setFavs","clickedId","favPokemonIndex","findIndex","fav","pokemonClicked","find","push","splice","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PA4BeA,EAvBC,SAAAC,GAEZ,IAIMC,EAAYD,EAAME,MAAMC,KAAI,SAACC,EAAMC,GACrC,OACI,oBAAgBC,UAAS,wCAAmCF,GAA5D,SACKA,GADIC,MAMjB,OACI,0BAASC,UAAU,cAAcC,GAAIP,EAAMO,GAAIC,QAb/B,SAAAC,GAChBT,EAAMU,cAAcV,EAAMO,KAY1B,UACI,qBAAKD,UAAU,qBAAqBK,IAAKX,EAAMY,IAAKC,IAAK,aAAeb,EAAMc,OAC9E,oBAAIR,UAAU,qBAAd,SAAoCN,EAAMc,OAC1C,oBAAIR,UAAU,oBAAd,SAAmCL,Q,gBCHhCc,EAhBE,SAAAf,GACb,IAAMgB,EAAWhB,EAAMiB,SAASd,KAAI,SAAAe,GAChC,OACI,oBAAgCZ,UAAU,OAA1C,SACI,cAAC,EAAD,CAASC,GAAIW,EAAQX,GACjBO,KAAMI,EAAQJ,KACdF,IAAKM,EAAQN,IACbV,MAAOgB,EAAQhB,MACfQ,cAAeV,EAAMU,iBALpBQ,EAAQX,GAAGY,eAU5B,OAAO,oBAAIb,UAAU,iBAAd,SAAgCU,KAI3CjB,EAAQqB,UAAY,CAChBb,GAAIc,IAAUC,OACdV,IAAKS,IAAUE,OACfT,KAAMO,IAAUE,QCnBpB,IAoDeC,EApDH,WAAO,IAsBXC,EACAC,EAvBU,EACKC,mBAASC,GAArBX,EADO,sBAEUU,mBAAS,IAFnB,mBAEPE,EAFO,KAEDC,EAFC,KAIRpB,EAAgB,SAAAqB,GAElB,IAAMC,EAAkBH,EAAKI,WAAU,SAAAC,GACnC,OAAOA,EAAI3B,KAAOwB,KAGtB,IAAyB,IAArBC,EAAwB,CACxB,IAAMG,EAAiBlB,EAASmB,MAAK,SAAAlB,GACjC,OAAOA,EAAQX,KAAOwB,KAE1BF,EAAKQ,KAAKF,GACVL,EAAQ,YAAID,SAEZA,EAAKS,OAAON,EAAiB,GAC7BF,EAAQ,YAAID,KAapB,OAPoB,IAAhBA,EAAKU,OACLd,EAAW,iCAEXA,EAAW,GACXC,EAAS,QAIT,gCACI,wBAAQpB,UAAU,aAAlB,SACI,oBAAIA,UAAU,oBAAd,6CAEJ,iCACI,kCACI,cAAC,EAAD,CAAUW,SAAUA,EAAUP,cAAeA,MAEjD,yBAASJ,UAAU,UAAnB,SACI,oCACI,oBAAIA,UAAW,iBAAmBoB,EAAlC,SAA2CD,IAC3C,cAAC,EAAD,CAAUnB,UAAU,kBAAkBW,SAAUY,EAAMnB,cAAeA,gBCzC7F8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.03fcedb0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n\n\nconst Pokemon = props => {\n\n    const handleClick = ev => {\n        props.handlePokemon(props.id);\n    };\n\n    const typesList = props.types.map((type, index) => {\n        return (\n            <li key={index} className={`card__inner--list card__type--${type}`}>\n                {type}\n            </li>\n        );\n    });\n\n    return (\n        <article className=\"card__inner\" id={props.id} onClick={handleClick} >\n            <img className=\"card__inner--image\" src={props.url} alt={'Imagen de ' + props.name} />\n            <h3 className=\"card__inner--title\">{props.name}</h3>\n            <ul className=\"card__inner--list\">{typesList}</ul>\n        </article>\n    );\n};\n\nexport default Pokemon;\n\nPokemon.propTypes = {\n    typesList: PropTypes.arrayOf(PropTypes.string),\n    url: PropTypes.string,\n    name: PropTypes.string,\n};","import React from \"react\";\nimport Pokemon from './Pokemon';\nimport PropTypes from 'prop-types';\n\nconst PokeList = props => {\n    const pokeList = props.pokemons.map(pokemon => {\n        return (\n            <li key={pokemon.id.toString()} className=\"card\">\n                <Pokemon id={pokemon.id}\n                    name={pokemon.name}\n                    url={pokemon.url}\n                    types={pokemon.types}\n                    handlePokemon={props.handlePokemon} />\n            </li>\n        );\n    });\n\n    return <ul className=\"card-container\">{pokeList}</ul>;\n};\n\nexport default PokeList;\nPokemon.propTypes = {\n    id: PropTypes.number,\n    url: PropTypes.string,\n    name: PropTypes.string,\n}","import data from '../data/data.json';\nimport PokeList from './PokeList';\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nconst App = () => {\n    const [pokemons] = useState(data);\n    const [favs, setFavs] = useState([]);\n\n    const handlePokemon = clickedId => {\n        // console.log(clickedId);\n        const favPokemonIndex = favs.findIndex(fav => {\n            return fav.id === clickedId;\n        });\n\n        if (favPokemonIndex === -1) {\n            const pokemonClicked = pokemons.find(pokemon => {\n                return pokemon.id === clickedId;\n            });\n            favs.push(pokemonClicked);\n            setFavs([...favs]);\n        } else {\n            favs.splice(favPokemonIndex, 1);\n            setFavs([...favs]);\n        }\n    };\n\n    let favTitle;\n    let noFavs;\n    if (favs.length !== 0) {\n        favTitle = \"This are my favorite Pokemons\";\n    } else {\n        favTitle = '';\n        noFavs = 'hide'\n    }\n\n    return (\n        <div>\n            <header className=\"app-header\">\n                <h1 className=\"app-header__title\"> Choose your favorite PoKemon</h1>\n            </header>\n            <main>\n                <section>\n                    <PokeList pokemons={pokemons} handlePokemon={handlePokemon} />\n                </section>\n                <section className=\"app-fav\">\n                    <article>\n                        <h2 className={'app-fav_title ' + noFavs}>{favTitle}</h2>\n                        <PokeList className=\"fav-pokemonList\" pokemons={favs} handlePokemon={handlePokemon}\n                        />\n                    </article>\n                </section>\n            </main>\n        </div>\n    );\n};\n\nexport default App;\n\nApp.propTypes = {\n    pokemonData: PropTypes.object,\n    id: PropTypes.number,\n    url: PropTypes.string,\n    name: PropTypes.string,\n    favPokemonIndex: PropTypes.number,\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/App.scss';\nimport './stylesheets/index.scss';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}